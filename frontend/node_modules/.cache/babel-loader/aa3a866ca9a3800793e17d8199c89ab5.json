{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jackg\\\\OneDrive\\\\Desktop\\\\tiktok-clone1\\\\src\\\\components\\\\Video.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport \"../assets/css/video.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Video() {\n  _s();\n\n  const videoRef = useRef(null);\n  const [playing, setPlaying] = useState(false);\n\n  const handleVideoPress = () => {\n    // If video is playing already, stop it and vice versa\n    if (playing) {\n      videoRef.current.pause();\n      setPlaying(false);\n    } else {\n      videoRef.current.play();\n      setPlaying(true);\n    }\n  };\n\n  const thumbnail = \"#t=0.5\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video\",\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"video__player\",\n      loop: true,\n      preload: \"metadata\",\n      muted: true,\n      playsInline: true,\n      ref: videoRef,\n      onClick: handleVideoPress,\n      type: \"video/mp4\",\n      src: \"https://download1077.mediafire.com/0z9h25lzceqg/naufbowg5er1qzm/Jalen+Green+s+NBA+Inspiration+%F0%9F%92%AF+shorts_360P.mp4\" + thumbnail,\n      children: \"Your browser does not support video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Video, \"g0C7bSRT1dBA9XKeoQaQLyRWcvA=\");\n\n_c = Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["C:/Users/jackg/OneDrive/Desktop/tiktok-clone1/src/components/Video.js"],"names":["React","useRef","useState","Video","videoRef","playing","setPlaying","handleVideoPress","current","pause","play","thumbnail"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAO,yBAAP;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B,QAAMC,QAAQ,GAAGH,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMK,gBAAgB,GAAG,MAAM;AAC3B;AACA,QAAIF,OAAJ,EAAa;AACTD,MAAAA,QAAQ,CAACI,OAAT,CAAiBC,KAAjB;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAHD,MAGO;AACHF,MAAAA,QAAQ,CAACI,OAAT,CAAiBE,IAAjB;AACAJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,GATD;;AAWA,QAAMK,SAAS,GAAG,QAAlB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACI;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAiC,MAAA,IAAI,MAArC;AAAsC,MAAA,OAAO,EAAC,UAA9C;AAAyD,MAAA,KAAK,MAA9D;AAA+D,MAAA,WAAW,MAA1E;AAA2E,MAAA,GAAG,EAAEP,QAAhF;AAA0F,MAAA,OAAO,EAAEG,gBAAnG;AAAqH,MAAA,IAAI,EAAC,WAA1H;AAAsI,MAAA,GAAG,EAAE,+HAA+HI,SAA1Q;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAxBuBR,K;;KAAAA,K","sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport \"../assets/css/video.css\"\r\n\r\nexport default function Video() {\r\n    const videoRef = useRef(null);\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const handleVideoPress = () => {\r\n        // If video is playing already, stop it and vice versa\r\n        if (playing) {\r\n            videoRef.current.pause();\r\n            setPlaying(false);\r\n        } else {\r\n            videoRef.current.play();\r\n            setPlaying(true);\r\n        }\r\n    }\r\n\r\n    const thumbnail = \"#t=0.5\"\r\n\r\n    return (\r\n        <div className=\"video\">\r\n            <video className=\"video__player\" loop preload=\"metadata\" muted playsInline ref={videoRef} onClick={handleVideoPress} type=\"video/mp4\" src={\"https://download1077.mediafire.com/0z9h25lzceqg/naufbowg5er1qzm/Jalen+Green+s+NBA+Inspiration+%F0%9F%92%AF+shorts_360P.mp4\" + thumbnail}>\r\n                Your browser does not support video\r\n            </video>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}